1.概念
2.在 Java 中参数是怎么传递的
3.总结





-----------------------------------------------------
1.概念
1)传值:
当方法参数是值传递时，意味着原参数的1个拷贝被传到了参数内部而不是原始参数，所以任何对于该参数的改变都只会影响这个拷贝值。
2)传引用:
当方法参数是引用传递时，意味着原始参数的引用或者说指针被传递到了方法内部，而不是这个原始参数的内容。



---------
2.在 Java 中参数是怎么传递的
    在 Java 中，不管原始参数的类型是什么，参数都是按值传递的。
每次当1个方法被执行的时候，在堆栈中就会为每个参数创建1个拷贝，这个拷贝会被传递到方法内部。

1)基本类型:
如果原始参数是基本类型，那么在堆栈中创建的便是这个参数的简单拷贝
2)非基本类型:
如果原始参数不是基本类型，那么在堆栈中创建的便是指向真正对象数据的新的引用或指针。
这个新的引用被传递到方法内部（在这种情况下，有2个引用指向了同1个对象数据）


---------
3.总结
1)在方法中，修改1个基础类型的参数永远不会影响原始参数值。
2)在方法中，改变1个对象参数的引用永远不会影响到原始引用。然而，它会在堆中创建了1个全新的对象。（译者注：指的是包装类和 immutable 对象）
3)在方法中，修改1个对象的属性会影响原始对象参数。
4)在方法中，修改集合和 Maps 会影响原始集合参数。

如果传递的是基本类型，则会影响原有的数据，
如果传递的是对象或者容器对象，则不会影响原有数据。
