1:查看锁表
2:加锁
3:解锁
4:msyql自动加锁机制


-------------------------------------------------------

1:查看锁表
查看没有锁住的表:
show open tables;
+----------+-------------------+--------+-------------+
| Database | Table             | In_use | Name_locked |
+----------+-------------------+--------+-------------+
| guns     | sys_role          |      1 |           0 |
| guns     | sys_login_log     |      0 |           0 |
| guns     | sys_dict          |      0 |           0 |
| guns     | sys_expense       |      0 |           0 |
| mysql    | proc              |      0 |           0 |
| guns     | sys_relation      |      0 |           0 |
| guns     | sys_dept          |      0 |           0 |
| guns     | user              |      0 |           0 |
| guns     | sys_menu          |      0 |           0 |
| guns     | sys_operation_log |      0 |           0 |
| guns     | sys_notice        |      0 |           0 |
| guns     | sys_user          |      1 |           0 |
+----------+-------------------+--------+-------------+
In_use 为 0，则没有锁
In_use 为 1，则加了锁



2:加锁
为sys_user加读锁，sys_role加写锁。
lock table sys_user read,sys_role write;
如果锁住了当前表，则不可以操作其他的表
-------------
读锁：共享锁

加读锁之后，只能查询该表，(锁住这张表，不让查询期间有数据更改，不让期间去查询其他表)
修改该表或者操作其他表都不行。

如果此时其他人操作这张表，则查询可以进行，如果是修改，则会造成阻塞，等待线程的完结。
-------------
写锁：排他锁

加写锁之后，可以读写自己锁定的表。
不可以操作其他的表。
如果此时其他人操作这张表，查询会造成阻塞，需等待线程的完结	





3:解锁
unlock tables;



4:msyql自动加锁机制
MyISAM在执行语句前，会自动给涉及的所有表加读锁。
      在执行增删改查操作前，会自动给涉及的表加写锁。
总结：
	读锁：对MYISAM表的读操作（加读锁）,不会阻塞其他进程对同一表的读请求，但会阻塞对同一表的写请求。只有当读锁释放后，才会执行其他进程的写操作。

	写锁：对MYISAM表的写操作（加写锁）,会阻塞其他进程对同一表的读和写操作，只有当写锁释放后，才会执行其他进程的读写操作。

	读锁会阻塞写，但不会阻塞读。
	写锁会将读和写都阻塞。
